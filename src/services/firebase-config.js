import { initializeApp } from "firebase/app";
import { getFirestore } from "firebase/firestore";
import { getStorage } from "firebase/storage";
import { getAuth } from "firebase/auth";
import { getFunctions } from "firebase/functions";
import { getDatabase } from 'firebase/database'; // Th√™m d√≤ng n√†y

const firebaseConfig = {
    apiKey: "AIzaSyABAtDgu1RWl8yhHECA2WDqOYTO_6NNQ6I",
    authDomain: "revenue-profit-app.firebaseapp.com",
    projectId: "revenue-profit-app",
    storageBucket: "revenue-profit-app.firebasestorage.app",
    messagingSenderId: "468098013262",
    appId: "1:468098013262:web:6fb885532508fce54d0b1f",
    measurementId: "G-3WJ29GSV28",
    databaseURL: "https://revenue-profit-app-default-rtdb.asia-southeast1.firebasedatabase.app"
};

// Kh·ªüi t·∫°o Firebase
const app = initializeApp(firebaseConfig);
console.log("üî• Firebase ƒë√£ kh·ªüi t·∫°o th√†nh c√¥ng!");

// Kh·ªüi t·∫°o v√† ki·ªÉm tra c√°c d·ªãch v·ª•
const db = getFirestore(app);
db && console.log("‚úÖ K·∫øt n·ªëi Firestore th√†nh c√¥ng!");

const storage = getStorage(app);
storage && console.log("‚úÖ K·∫øt n·ªëi Storage th√†nh c√¥ng!");

const auth = getAuth(app);
auth && console.log("‚úÖ D·ªãch v·ª• Auth s·∫µn s√†ng!");

const functions = getFunctions(app, 'asia-southeast1');

// ‚ú® CH·ªà C·∫¶N V√î HI·ªÜU H√ìA (COMMENT) ƒêO·∫†N N√ÄY L√Ä ƒê∆Ø·ª¢C ‚ú®
/*
if (window.location.hostname === "localhost") {
    console.log("ƒê√£ b·ªè qua k·∫øt n·ªëi ƒë·∫øn Firebase Emulators...");
    // --- C√°c d√≤ng connect...Emulator ƒë√£ ƒë∆∞·ª£c v√¥ hi·ªáu h√≥a ---
    // import { connectFirestoreEmulator } from "firebase/firestore";
    // import { connectAuthEmulator } from "firebase/auth";
    // import { connectFunctionsEmulator } from "firebase/functions";
    // connectAuthEmulator(auth, "http://localhost:9099");
    // connectFirestoreEmulator(db, "localhost", 8080);
    // connectFunctionsEmulator(functions, "localhost", 5001);
}
*/
const rtdb = getDatabase(app); // Th√™m d√≤ng n√†y

// Xu·∫•t c√°c d·ªãch v·ª•
export { db, auth, storage, functions, rtdb  };